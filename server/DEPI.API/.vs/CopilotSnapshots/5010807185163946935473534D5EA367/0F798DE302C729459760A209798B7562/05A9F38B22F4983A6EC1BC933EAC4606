using Microsoft.EntityFrameworkCore;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace DEPI.DataAccess.DataContext
{
    public class AppDbContext : DbContext
    {
        public AppDbContext(DbContextOptions<AppDbContext> options) : base(options)
        {
        }
        
        public DbSet<Entites.User> Users { get; set; }
        public DbSet<Entites.Resume> Resumes { get; set; }
        public DbSet<Entites.ResumeAnalysis> ResumeAnalyses { get; set; }
        public DbSet<Entites.InterviewSession> InterviewSessions { get; set; }
        public DbSet<Entites.InterviewAnswer> InterviewAnswers { get; set; }
        
        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            base.OnModelCreating(modelBuilder);
            
            // Configure relationships to prevent circular cascading delete
            modelBuilder.Entity<Entites.InterviewSession>()
                .HasOne(is => is.Resume)
                .WithMany()
                .HasForeignKey(is => is.ResumeId)
                .OnDelete(DeleteBehavior.NoAction); // Changed from Cascade to NoAction
                
            // Other relationships remain Cascade by default
        }
    }
}
